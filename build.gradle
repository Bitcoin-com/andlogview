/*
 * Copyright 2015 Mikhail Lopatkin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }
    dependencies {
        classpath 'net.ltgt.gradle:gradle-apt-plugin:0.9'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
    }
}

apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'net.ltgt.apt'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

repositories {
    jcenter()
}

def daggerVersion = '2.8'

dependencies {
    compile "com.google.dagger:dagger:${daggerVersion}"
    compile 'com.google.guava:guava:20.0'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.google.code.findbugs:jsr305:3.0.1'
    compile 'log4j:log4j:1.2.17'
    compile 'net.sf.jopt-simple:jopt-simple:4.6'
    compile 'com.android.tools.ddms:ddmlib:25.2.2'

    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-core:1.9.5'

    apt "com.google.dagger:dagger-compiler:${daggerVersion}"
}

checkstyle {
    toolVersion = '7.8.1'
}

applicationName = 'logview'
version = '0.19-SNAPSHOT'
mainClassName = 'org.bitbucket.mlopatkin.android.logviewer.Main'

def javaVersion = JavaVersion.VERSION_1_8;
sourceCompatibility = javaVersion;
targetCompatibility = javaVersion; // defaults to sourceCompatibility

sourceSets {
    main {
        java {
            srcDir 'src'
            srcDir 'utils'
        }
        resources {
            srcDir 'resources'
        }
    }
    test {
        java {
            srcDir 'test'
        }
    }
}

shadow.applicationDistribution.from(project.getProjectDir()) {
    include 'HISTORY', 'LICENSE', 'NOTICE', 'README'
}

// Treat warnings as errors
compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-Werror"
}
