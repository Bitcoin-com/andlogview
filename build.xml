<?xml version="1.0" encoding="utf-8" ?>
<project name="Android Log Viewer" xmlns:ivy="antlib:org.apache.ivy.ant" default="all">

    <!-- Include debug info into compiled sources -->
    <property name="debug" value="yes"/>

    <!-- Location for libraries used for compilation -->
    <property name="lib.dir" location="lib"/>
    <property name="apt.lib.dir" location="${lib.dir}/apt-lib"/>

    <!-- Location for intermediate build products -->
    <property name="build.intermediate.dir" location="build"/>

    <property name="build.javadoc.dir" location="${build.intermediate.dir}/javadoc"/>

    <!-- Location for a distributive package output -->
    <property name="dist.dir" location="dist"/>
    <!-- The name of the distributive package -->
    <property name="dist.name" value="logview.zip"/>

    <property name="report.dir" location="${build.intermediate.dir}/report"/>

    <!-- Main jar file for the application -->
    <property name="main.jar.name" value="logview.jar"/>

    <!-- Source files locations -->
    <property name="src.main.dir" location="src"/>
    <property name="src.utils.dir" location="utils"/>
    <property name="src.test.dir" location="test"/>

    <!-- Resources to be embedded into the package -->
    <property name="res.dir" location="resources"/>

    <!-- Target java version -->
    <property name="target.version" value="1.7"/>

    <!-- Ivy configurations -->

    <property name="build.sysclasspath" value="ignore"/>

    <!-- Locations for intermediate libraries and compiled files - what goes to the jar -->
    <property name="build.classes.dir" location="${build.intermediate.dir}/bin"/>
    <property name="build.gen.dir" location="${build.intermediate.dir}/gen"/>
    <property name="build.lib.dir" location="${build.intermediate.dir}/lib"/>
    <property name="build.test.dir" location="${build.intermediate.dir}/test"/>

    <path id="libraries">
        <fileset dir="${lib.dir}" includes="*.jar"/>
    </path>

    <path id="apt.libraries">
        <fileset dir="${apt.lib.dir}" />
    </path>

    <!-- Files that should be included into distributive package as is -->
    <zipfileset dir="." id="dist.resources">
        <include name="HISTORY"/>
        <include name="NOTICE"/>
        <include name="README"/>
        <include name="LICENSE"/>
        <include name="logview.bat"/>
        <include name="logview"/>
    </zipfileset>

    <ivy:settings file="ivysettings.xml" />

    <target name="all"
            depends="test, dist"
            description="Run tests then prepare the distributive package"/>

    <target name="test" description="Run unit tests" depends="compile-test">
        <junit failureproperty="tests.failed" errorproperty="tests.failed">
            <classpath>
                <path refid="libraries"/>
                <path location="${build.classes.dir}"/>
                <path location="${build.test.dir}"/>
            </classpath>
            <formatter type="brief"/>
            <batchtest todir="${report.dir}">
                <fileset dir="${build.test.dir}" includes="**/*Test.class"/>
            </batchtest>
        </junit>
        <fail if="tests.failed"/>
    </target>

    <target name="dist"
            description="Prepare the distributive package"
            depends="make-jar, make-dist-dir">
        <zip destfile="${dist.dir}/${dist.name}">
            <zipfileset refid="dist.resources"/>
            <zipfileset dir="${build.lib.dir}" includes="*.jar" prefix="lib"/>
        </zip>
    </target>

    <target name="make-jar" depends="compile-dist, unpack-libs, copy-res, make-dist-dir">
        <jar destfile="${build.lib.dir}/${main.jar.name}">
            <fileset dir="${build.classes.dir}"/>
            <manifest>
                <attribute name="Main-Class" value="org.bitbucket.mlopatkin.android.logviewer.Main"/>
            </manifest>
        </jar>
    </target>

    <target name="compile-dist" depends="make-intermediate-dir, resolve-compile-dependencies">
        <javac destdir="${build.classes.dir}"
               classpathref="libraries"
               encoding="utf-8"
               target="${target.version}"
               source="${target.version}"
               debug="${debug}">
            <src path="${src.main.dir}"/>
            <src path="${src.utils.dir}"/>
        	<compilerarg line="-processorpath ${toString:apt.libraries}" />
        	<compilerarg line="-s ${build.gen.dir}"/>
        </javac>
    </target>

    <target name="resolve-compile-dependencies">
        <ivy:retrieve conf="compile" pattern="${lib.dir}/[artifact].[ext]"/>
        <ivy:retrieve conf="apt" pattern="${apt.lib.dir}/[artifact].[ext]"/>
    </target>

    <target name="compile-test"
            depends="compile-dist, resolve-test-dependencies, make-intermediate-dir">
        <javac destdir="${build.test.dir}" encoding="utf-8" debug="${debug}"
               target="${target.version}" source="${target.version}">
            <src path="${src.test.dir}"/>
            <classpath>
                <path refid="libraries"/>
                <path location="${build.classes.dir}"/>
            </classpath>
        </javac>
    </target>

    <target name="resolve-test-dependencies">
        <ivy:retrieve conf="test" pattern="${lib.dir}/[artifact].[ext]"/>
    </target>

    <target name="unpack-libs" depends="resolve-core-libs, make-intermediate-dir">
        <unjar dest="${build.classes.dir}">
            <patternset>
                <exclude name="META-INF/**"/>
                <exclude name="*.txt"/>
            </patternset>
            <fileset refid="core.files"/>
        </unjar>
    </target>

    <target name="resolve-core-libs">
        <ivy:resolve conf="core"/>
        <ivy:cachefileset setid="core.files"/>
    </target>

    <target name="copy-res" depends="make-intermediate-dir">
        <copy todir="${build.classes.dir}/">
            <fileset dir="${res.dir}" includes="**/*.*"/>
        </copy>
    </target>

    <target name="make-intermediate-dir">
        <mkdir dir="${build.intermediate.dir}"/>
        <mkdir dir="${build.javadoc.dir}"/>
        <mkdir dir="${build.classes.dir}"/>
        <mkdir dir="${build.lib.dir}"/>
        <mkdir dir="${build.test.dir}"/>
        <mkdir dir="${build.gen.dir}"/>
        <mkdir dir="${report.dir}"/>
    </target>

    <target name="make-dist-dir">
        <mkdir dir="${dist.dir}"/>
    </target>

    <target name="javadoc" depends="make-intermediate-dir">
        <javadoc destdir="${build.javadoc.dir}">
            <fileset dir="${src.main.dir}" defaultexcludes="true" />
            <fileset dir="${src.utils.dir}" defaultexcludes="true" />
        </javadoc>
    </target>

    <target name="clean" description="Clean up all generated files">
        <delete dir="${build.intermediate.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>

</project>
